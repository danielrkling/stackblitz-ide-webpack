(()=>{"use strict";const e=document.getElementById("resizer"),n=document.getElementById("sidebar"),t=document.getElementById("container");function i(e){const i=`${e.x}px`;n.style.width=i,t.style.width=document.body.offsetWidth-e.x+"px"}e.addEventListener("mousedown",(e=>{document.addEventListener("mousemove",i,!1),document.addEventListener("mouseup",(()=>{document.removeEventListener("mousemove",i,!1)}),!1)})),i({x:250});document.getElementById("npmButton").addEventListener("click",(function(){return e=this,n=void 0,i=function*(){try{const i=document.getElementById("npmPackageName"),o=yield fetch(`https://registry.npmjs.org/${i.value}/latest`),a=yield o.json();e=a.dist.tarball,n=a.name,t=document.createElement("a"),document.body.appendChild(t),t.style.display="none",t.href=e,t.download=n,t.target="_blank",t.click(),t.remove()}catch(e){console.log(e)}var e,n,t},new((t=void 0)||(t=Promise))((function(o,a){function s(e){try{l(i.next(e))}catch(e){a(e)}}function r(e){try{l(i.throw(e))}catch(e){a(e)}}function l(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(s,r)}l((i=i.apply(e,n||[])).next())}));var e,n,t,i}));const o={files:{},rootFolder:void 0,leftActiveFile:void 0,rightActiveFile:void 0,dragFile:void 0},a=monaco;a.editor.setTheme("vs-dark"),a.languages.typescript.typescriptDefaults.setEagerModelSync(!0),a.languages.typescript.javascriptDefaults.setEagerModelSync(!0),a.languages.typescript.typescriptDefaults.setCompilerOptions({target:a.languages.typescript.ScriptTarget.Latest,allowNonTsExtensions:!0,moduleResolution:a.languages.typescript.ModuleResolutionKind.NodeJs,module:a.languages.typescript.ModuleKind.CommonJS,noEmit:!0,esModuleInterop:!0,jsx:a.languages.typescript.JsxEmit.React,reactNamespace:"React",allowJs:!0,typeRoots:["node_modules/@types"],allowUmdGlobalAccess:!0}),a.languages.typescript.typescriptDefaults.setDiagnosticsOptions({noSemanticValidation:!1,noSyntaxValidation:!1}),fetch("https://cdn.jsdelivr.net/npm/@types/react@16.9.41/index.d.ts").then((function(e){return n=this,t=void 0,o=function*(){a.languages.typescript.typescriptDefaults.addExtraLib(yield e.text(),"file:///node_modules/@react/types/index.d.ts")},new((i=void 0)||(i=Promise))((function(e,a){function s(e){try{l(o.next(e))}catch(e){a(e)}}function r(e){try{l(o.throw(e))}catch(e){a(e)}}function l(n){var t;n.done?e(n.value):(t=n.value,t instanceof i?t:new i((function(e){e(t)}))).then(s,r)}l((o=o.apply(n,t||[])).next())}));var n,t,i,o}));const s=document.getElementById("leftContainer"),r=document.getElementById("rightContainer"),l=(document.getElementById("leftEditor"),document.getElementById("rightEditor"),document.getElementById("leftTabs")),d=document.getElementById("rightTabs"),c=document.getElementById("splitView");c.addEventListener("click",(function(){var e;r.classList.contains("hidden")?(r.classList.remove("hidden"),c.classList.add("orange")):(r.classList.add("hidden"),c.classList.remove("orange"),null===(e=f.activeFile)||void 0===e||e.deactivate({right:!0}))}));const u=a.editor.create(s,{model:null,automaticLayout:!0,wrappingIndent:"indent",detectIndentation:!1}),f=a.editor.create(r,{model:null,automaticLayout:!0,wrappingIndent:"indent",detectIndentation:!1});s.addEventListener("drop",(function(e){e.preventDefault(),o.dragFile.activate({left:!0},!0)})),s.addEventListener("dragover",(function(e){e.preventDefault()})),r.addEventListener("drop",(function(e){e.preventDefault(),o.dragFile.activate({right:!0},!0)})),r.addEventListener("dragover",(function(e){e.preventDefault()}));var h="\n  declare namespace Compiler {\n\n    export interface Config {\n        input: string;\n        output: string;\n        format: Format;\n        target: 'last 2 edge versions' | 'ie 11' | string;\n        name?: string;\n        preCompilerOptions?: TransformOptions;\n        bundleOptions?: BundleOptions;\n        generateOptions?: GenerateOptions;\n        postCompilerOptions?: TransformOptions;\n        scripts: string[];\n    }\n\n    export type Format = 'amd' | 'cjs' | 'es' | 'iife' | 'umd' | 'css'\n\n    export interface BundleOptions {\n        /** The format of the generated bundle. */\n        format: Format\n        /** What export mode to use. Defaults to auto, which guesses your intentions based on what the `entry` module exports. */\n        exports?: 'auto' | 'default' | 'named' | 'none'\n        /** An ID to use for AMD/UMD bundles. */\n        moduleId?: string\n        /** The name to use for the module for UMD/IIFE bundles (required for bundles with exports). */\n        name?: string\n        /** Mapping of IDs → global variable names. Used for UMD/IIFE bundles. */\n        globals?: { [id: string]: string }\n        /**\n         * Function that takes an ID and returns a path, or Object of id: path pairs.\n         * Where supplied, these paths will be used in the generated bundle instead of the module ID, allowing you to (for example) load dependencies from a CDN.\n         */\n        paths?: ((id: string) => string) | { [id: string]: string }\n        /**\n         * The indent string to use, for formats that require code to be indented (AMD, IIFE, UMD).\n         * Can also be false (no indent), or true (the default – auto-indent)\n         */\n        indent?: string | boolean\n        /**\n         * Whether or not to add an 'interop block'. By default (interop: true).\n         * For safety's sake, Rollup will assign any external dependencies' default exports to a separate variable if it's necessary to distinguish between default and named exports.\n         * This generally only applies if your external dependencies were transpiled (for example with Babel) – if you're sure you don't need it, you can save a few bytes with interop: false.\n         */\n        interop?: boolean\n        /** A string to prepend to the bundle. */\n        banner?: string\n        /** A string to append to the bundle. */\n        footer?: string\n        /** A string prepended to the code inside of the format-specific wrapper */\n        intro?: string\n        /** A string appended to the code inside of the format-specific wrapper */\n        outro?: string\n        /**\n         * Whether to include the 'use strict' pragma at the top of generated non-ES6 bundles.\n         * Strictly-speaking (geddit?), ES6 modules are always in strict mode, so you shouldn't disable this without good reason.\n         */\n        strict?: boolean\n    }\n\n    export interface GenerateOptions extends BundleOptions {\n        /** Whether to generate a sourcemap. If true, the return value from `bundle.generate(...)` will include a map property */\n        sourcemap?: boolean\n        /**\n         * The location of the generated bundle. If this is an absolute path, all the sources paths in the sourcemap will be relative to it.\n         * The map.file property is the basename of sourcemapFile, as the location of the sourcemap is assumed to be adjacent to the bundle.\n         */\n        sourcemapFile?: string\n    }\n\n    export interface TransformOptions {\n        /**\n         * Specify which assumptions it can make about your code, to better optimize the compilation result. **NOTE**: This replaces the various `loose` options in plugins in favor of\n         * top-level options that can apply to multiple plugins\n         *\n         * @see https://babeljs.io/docs/en/assumptions\n         */\n        assumptions?: { [name: string]: boolean } | null | undefined;\n\n        /**\n         * Include the AST in the returned object\n         *\n         * Default: `false`\n         */\n        ast?: boolean | null | undefined;\n\n        /**\n         * Attach a comment after all non-user injected code\n         *\n         * Default: `null`\n         */\n        auxiliaryCommentAfter?: string | null | undefined;\n\n        /**\n         * Attach a comment before all non-user injected code\n         *\n         * Default: `null`\n         */\n        auxiliaryCommentBefore?: string | null | undefined;\n\n        /**\n         * Specify the \"root\" folder that defines the location to search for \"babel.config.js\", and the default folder to allow `.babelrc` files inside of.\n         *\n         * Default: `\".\"`\n         */\n        root?: string | null | undefined;\n\n        /**\n         * This option, combined with the \"root\" value, defines how Babel chooses its project root.\n         * The different modes define different ways that Babel can process the \"root\" value to get\n         * the final project root.\n         *\n         * @see https://babeljs.io/docs/en/next/options#rootmode\n         */\n        rootMode?: 'root' | 'upward' | 'upward-optional' | undefined;\n\n        /**\n         * The config file to load Babel's config from. Defaults to searching for \"babel.config.js\" inside the \"root\" folder. `false` will disable searching for config files.\n         *\n         * Default: `undefined`\n         */\n        configFile?: string | boolean | null | undefined;\n\n        /**\n         * Specify whether or not to use .babelrc and\n         * .babelignore files.\n         *\n         * Default: `true`\n         */\n        babelrc?: boolean | null | undefined;\n\n        /**\n         * Specify which packages should be search for .babelrc files when they are being compiled. `true` to always search, or a path string or an array of paths to packages to search\n         * inside of. Defaults to only searching the \"root\" package.\n         *\n         * Default: `(root)`\n         */\n        babelrcRoots?: boolean | MatchPattern | MatchPattern[] | null | undefined;\n\n        /**\n         * Toggles whether or not browserslist config sources are used, which includes searching for any browserslist files or referencing the browserslist key inside package.json.\n         * This is useful for projects that use a browserslist config for files that won't be compiled with Babel.\n         *\n         * If a string is specified, it must represent the path of a browserslist configuration file. Relative paths are resolved relative to the configuration file which specifies\n         * this option, or to `cwd` when it's passed as part of the programmatic options.\n         *\n         * Default: `true`\n         */\n        browserslistConfigFile?: boolean | null | undefined;\n\n        /**\n         * The Browserslist environment to use.\n         *\n         * Default: `undefined`\n         */\n        browserslistEnv?: string | null | undefined;\n\n        /**\n         * By default `babel.transformFromAst` will clone the input AST to avoid mutations.\n         * Specifying `cloneInputAst: false` can improve parsing performance if the input AST is not used elsewhere.\n         *\n         * Default: `true`\n         */\n        cloneInputAst?: boolean | null | undefined;\n\n        /**\n         * Defaults to environment variable `BABEL_ENV` if set, or else `NODE_ENV` if set, or else it defaults to `\"development\"`\n         *\n         * Default: env vars\n         */\n        envName?: string | undefined;\n\n        /**\n         * If any of patterns match, the current configuration object is considered inactive and is ignored during config processing.\n         */\n        exclude?: MatchPattern | MatchPattern[] | undefined;\n\n        /**\n         * Enable code generation\n         *\n         * Default: `true`\n         */\n        code?: boolean | null | undefined;\n\n        /**\n         * Output comments in generated output\n         *\n         * Default: `true`\n         */\n        comments?: boolean | null | undefined;\n\n        /**\n         * Do not include superfluous whitespace characters and line terminators. When set to `\"auto\"` compact is set to `true` on input sizes of >500KB\n         *\n         * Default: `\"auto\"`\n         */\n        compact?: boolean | 'auto' | null | undefined;\n\n        /**\n         * The working directory that Babel's programmatic options are loaded relative to.\n         *\n         * Default: `\".\"`\n         */\n        cwd?: string | null | undefined;\n\n        /**\n         * Utilities may pass a caller object to identify themselves to Babel and\n         * pass capability-related flags for use by configs, presets and plugins.\n         *\n         * @see https://babeljs.io/docs/en/next/options#caller\n         */\n        caller?: TransformCaller | undefined;\n\n        /**\n         * This is an object of keys that represent different environments. For example, you may have: `{ env: { production: { /* specific options */ } } }`\n         * which will use those options when the `envName` is `production`\n         *\n         * Default: `{}`\n         */\n        env?: { [index: string]: TransformOptions | null | undefined } | null | undefined;\n\n        /**\n         * A path to a `.babelrc` file to extend\n         *\n         * Default: `null`\n         */\n        extends?: string | null | undefined;\n\n        /**\n         * Filename for use in errors etc\n         *\n         * Default: `\"unknown\"`\n         */\n        filename?: string | null | undefined;\n\n        /**\n         * Filename relative to `sourceRoot`\n         *\n         * Default: `(filename)`\n         */\n        filenameRelative?: string | null | undefined;\n\n        /**\n         * An object containing the options to be passed down to the babel code generator, @babel/generator\n         *\n         * Default: `{}`\n         */\n        generatorOpts?: GeneratorOptions | null | undefined;\n\n        /**\n         * Specify a custom callback to generate a module id with. Called as `getModuleId(moduleName)`. If falsy value is returned then the generated module id is used\n         *\n         * Default: `null`\n         */\n        getModuleId?: ((moduleName: string) => string | null | undefined) | null | undefined;\n\n        /**\n         * ANSI highlight syntax error code frames\n         *\n         * Default: `true`\n         */\n        highlightCode?: boolean | null | undefined;\n\n        /**\n         * Opposite to the `only` option. `ignore` is disregarded if `only` is specified\n         *\n         * Default: `null`\n         */\n        ignore?: MatchPattern[] | null | undefined;\n\n        /**\n         * This option is a synonym for \"test\"\n         */\n        include?: MatchPattern | MatchPattern[] | undefined;\n\n\n\n        /**\n         * Should the output be minified (not printing last semicolons in blocks, printing literal string values instead of escaped ones, stripping `()` from `new` when safe)\n         *\n         * Default: `false`\n         */\n        minified?: boolean | null | undefined;\n\n        /**\n         * Specify a custom name for module ids\n         *\n         * Default: `null`\n         */\n        moduleId?: string | null | undefined;\n\n        /**\n         * If truthy, insert an explicit id for modules. By default, all modules are anonymous. (Not available for `common` modules)\n         *\n         * Default: `false`\n         */\n        moduleIds?: boolean | null | undefined;\n\n        /**\n         * Optional prefix for the AMD module formatter that will be prepend to the filename on module definitions\n         *\n         * Default: `(sourceRoot)`\n         */\n        moduleRoot?: string | null | undefined;\n\n        /**\n         * A glob, regex, or mixed array of both, matching paths to **only** compile. Can also be an array of arrays containing paths to explicitly match. When attempting to compile\n         * a non-matching file it's returned verbatim\n         *\n         * Default: `null`\n         */\n        only?: MatchPattern[] | null | undefined;\n\n        /**\n         * Allows users to provide an array of options that will be merged into the current configuration one at a time.\n         * This feature is best used alongside the \"test\"/\"include\"/\"exclude\" options to provide conditions for which an override should apply\n         */\n        overrides?: TransformOptions[] | undefined;\n\n        /**\n         * An object containing the options to be passed down to the babel parser, @babel/parser\n         *\n         * Default: `{}`\n         */\n        parserOpts?: ParserOptions | null | undefined;\n\n        /**\n         * List of plugins to load and use\n         *\n         * Default: `[]`\n         */\n        plugins?: PluginItem[] | null | undefined;\n\n        /**\n         * List of presets (a set of plugins) to load and use\n         *\n         * Default: `[]`\n         */\n        presets?: PluginItem[] | null | undefined;\n\n        /**\n         * Retain line numbers. This will lead to wacky code but is handy for scenarios where you can't use source maps. (**NOTE**: This will not retain the columns)\n         *\n         * Default: `false`\n         */\n        retainLines?: boolean | null | undefined;\n\n        /**\n         * An optional callback that controls whether a comment should be output or not. Called as `shouldPrintComment(commentContents)`. **NOTE**: This overrides the `comment` option when used\n         *\n         * Default: `null`\n         */\n        shouldPrintComment?: ((commentContents: string) => boolean) | null | undefined;\n\n        /**\n         * Set `sources[0]` on returned source map\n         *\n         * Default: `(filenameRelative)`\n         */\n        sourceFileName?: string | null | undefined;\n\n        /**\n         * If truthy, adds a `map` property to returned output. If set to `\"inline\"`, a comment with a sourceMappingURL directive is added to the bottom of the returned code. If set to `\"both\"`\n         * then a `map` property is returned as well as a source map comment appended. **This does not emit sourcemap files by itself!**\n         *\n         * Default: `false`\n         */\n        sourceMaps?: boolean | 'inline' | 'both' | null | undefined;\n\n        /**\n         * The root from which all sources are relative\n         *\n         * Default: `(moduleRoot)`\n         */\n        sourceRoot?: string | null | undefined;\n\n        /**\n         * Indicate the mode the code should be parsed in. Can be one of \"script\", \"module\", or \"unambiguous\". `\"unambiguous\"` will make Babel attempt to guess, based on the presence of ES6\n         * `import` or `export` statements. Files with ES6 `import`s and `export`s are considered `\"module\"` and are otherwise `\"script\"`.\n         *\n         * Default: `(\"module\")`\n         */\n        sourceType?: 'script' | 'module' | 'unambiguous' | null | undefined;\n\n        /**\n         * If all patterns fail to match, the current configuration object is considered inactive and is ignored during config processing.\n         */\n        test?: MatchPattern | MatchPattern[] | undefined;\n\n        /**\n         * Describes the environments you support/target for your project.\n         * This can either be a [browserslist-compatible](https://github.com/ai/browserslist) query (with [caveats](https://babeljs.io/docs/en/babel-preset-env#ineffective-browserslist-queries))\n         *\n         * Default: `{}`\n         */\n        targets?:\n        | string\n        | string[]\n        | {\n            esmodules?: boolean;\n            node?: Omit<string, 'current'> | 'current' | true;\n            safari?: Omit<string, 'tp'> | 'tp';\n            browsers?: string | string[];\n            android?: string;\n            chrome?: string;\n            deno?: string;\n            edge?: string;\n            electron?: string;\n            firefox?: string;\n            ie?: string;\n            ios?: string;\n            opera?: string;\n            rhino?: string;\n            samsung?: string;\n        };\n\n    }\n\n    export type MatchPattern = string | RegExp | ((filename: string | undefined, context: MatchPatternContext) => boolean);\n\n    export interface TransformCaller {\n        // the only required property\n        name: string;\n        // e.g. set to true by `babel-loader` and false by `babel-jest`\n        supportsStaticESM?: boolean | undefined;\n        supportsDynamicImport?: boolean | undefined;\n        supportsExportNamespaceFrom?: boolean | undefined;\n        supportsTopLevelAwait?: boolean | undefined;\n        // augment this with a \"declare module '@babel/core' { ... }\" if you need more keys\n    }\n\n    export interface MatchPatternContext {\n        envName: string;\n        dirname: string;\n        caller: TransformCaller | undefined;\n    }\n\n    export interface ConfigItem {\n        /**\n         * The name that the user gave the plugin instance, e.g. `plugins: [ ['env', {}, 'my-env'] ]`\n         */\n        name?: string | undefined;\n\n        /**\n         * The resolved value of the plugin.\n         */\n        value: object | ((...args: any[]) => any);\n\n        /**\n         * The options object passed to the plugin.\n         */\n        options?: object | false | undefined;\n\n        /**\n         * The path that the options are relative to.\n         */\n        dirname: string;\n\n        /**\n         * Information about the plugin's file, if Babel knows it.\n         *  *\n         */\n        file?:\n        | {\n            /**\n             * The file that the user requested, e.g. `\"@babel/env\"`\n             */\n            request: string;\n\n            /**\n             * The full path of the resolved file, e.g. `\"/tmp/node_modules/@babel/preset-env/lib/index.js\"`\n             */\n            resolved: string;\n        }\n        | null\n        | undefined;\n    }\n\n    export type PluginOptions = object | undefined | false;\n\n    export type PluginTarget = string | object | ((...args: any[]) => any);\n\n    export type PluginItem =\n        | ConfigItem\n        | PluginTarget\n        | [PluginTarget, PluginOptions]\n        | [PluginTarget, PluginOptions, string | undefined];\n\n\n    export interface GeneratorOptions {\n        /**\n         * Optional string to add as a block comment at the start of the output file.\n         */\n        auxiliaryCommentBefore?: string | undefined;\n\n        /**\n         * Optional string to add as a block comment at the end of the output file.\n         */\n        auxiliaryCommentAfter?: string | undefined;\n\n        /**\n         * Function that takes a comment (as a string) and returns true if the comment should be included in the output.\n         * By default, comments are included if `opts.comments` is `true` or if `opts.minifed` is `false` and the comment\n         * contains `@preserve` or `@license`.\n         */\n        shouldPrintComment?(comment: string): boolean;\n\n        /**\n         * Attempt to use the same line numbers in the output code as in the source code (helps preserve stack traces).\n         * Defaults to `false`.\n         */\n        retainLines?: boolean | undefined;\n\n        /**\n         * Should comments be included in output? Defaults to `true`.\n         */\n        comments?: boolean | undefined;\n\n        /**\n         * Set to true to avoid adding whitespace for formatting. Defaults to the value of `opts.minified`.\n         */\n        compact?: boolean | 'auto' | undefined;\n\n        /**\n         * Should the output be minified. Defaults to `false`.\n         */\n        minified?: boolean | undefined;\n\n        /**\n         * Set to true to reduce whitespace (but not as much as opts.compact). Defaults to `false`.\n         */\n        concise?: boolean | undefined;\n\n        /**\n         * The type of quote to use in the output. If omitted, autodetects based on `ast.tokens`.\n         */\n        quotes?: 'single' | 'double' | undefined;\n\n        /**\n         * Used in warning messages\n         */\n        filename?: string | undefined;\n\n        /**\n         * Enable generating source maps. Defaults to `false`.\n         */\n        sourceMaps?: boolean | undefined;\n\n        /**\n         * The filename of the generated code that the source map will be associated with.\n         */\n        sourceMapTarget?: string | undefined;\n\n        /**\n         * A root for all relative URLs in the source map.\n         */\n        sourceRoot?: string | undefined;\n\n        /**\n         * The filename for the source code (i.e. the code in the `code` argument).\n         * This will only be used if `code` is a string.\n         */\n        sourceFileName?: string | undefined;\n\n        /**\n         * Set to true to run jsesc with \"json\": true to print \"©\" vs. \"©\";\n         */\n        jsonCompatibleStrings?: boolean | undefined;\n    }\n}";function p(e){var n;const t=document.createElement("div");if(!e)return t;if(t.className=null!==(n=e.className)&&void 0!==n?n:"",e.listeners)for(const n of e.listeners)t.addEventListener(n.type,n.listener);if(e.innerHTML&&(t.innerHTML=e.innerHTML),e.children)for(const n of e.children)t.appendChild(n);return e.parent&&e.parent.appendChild(t),t}a.languages.typescript.javascriptDefaults.addExtraLib(h),a.languages.typescript.typescriptDefaults.addExtraLib(h);class m{constructor(e,n){const t=this;this.container=p({className:"context-menu hidden",children:[p({innerHTML:`${e.icon()}<span class='tree-label-name'>${e.name()}</span>`}),document.createElement("HR"),...n.map((function(e){return p({className:"context-menu-action",innerHTML:e.icon+e.label,listeners:[{type:"click",listener:function(){return n=this,i=void 0,a=function*(){t.hide(),e.action()},new((o=void 0)||(o=Promise))((function(e,t){function s(e){try{l(a.next(e))}catch(e){t(e)}}function r(e){try{l(a.throw(e))}catch(e){t(e)}}function l(n){var t;n.done?e(n.value):(t=n.value,t instanceof o?t:new o((function(e){e(t)}))).then(s,r)}l((a=a.apply(n,i||[])).next())}));var n,i,o,a}}]})}))]})}show(e){g(),this.container.classList.remove("hidden"),this.container.style.top=e.clientY+"px",this.container.style.left=e.clientX+"px",this.container.getBoundingClientRect().bottom>window.innerHeight&&(this.container.style.top=e.clientY-this.container.offsetHeight+"px"),e.stopPropagation(),e.preventDefault()}hide(){this.container.classList.add("hidden")}}function g(){const e=document.getElementsByClassName("context-menu");for(const n of e)n.classList.add("hidden")}document.addEventListener("click",g),document.addEventListener("contextmenu",g);var v=function(e,n,t,i){return new(t||(t=Promise))((function(o,a){function s(e){try{l(i.next(e))}catch(e){a(e)}}function r(e){try{l(i.throw(e))}catch(e){a(e)}}function l(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(s,r)}l((i=i.apply(e,n||[])).next())}))};class y{constructor(e,n){this.handle=e,this.parentFolder=n,this.state={loaded:n.state.loaded},this.container=p({className:"container file"})}name(){return this.handle.name}extension(){return this.name().split(".").pop()}path(){return this.parentFolder===o.rootFolder?this.name():this.parentFolder.path()+"/"+this.name()}language(){switch(this.extension()){case"html":case"hta":return"html";case"jsx":case"js":case"mjs":return"javascript";case"css":return"css";case"scss":return"scss";case"json":return"json";case"md":return"markdown";case"vb":case"vbs":case"bas":case"cls":return"vb";case"sql":return"sql";case"cs":return"cs";case"ts":case"tsx":return"typescript";case"txt":return"text";default:return null}}icon(){switch(this.language()){case"javascript":return'<i class="fa-brands fa-square-js"></i>';case"typescript":return'<i class="fa-brands fa-square-js typescript"></i>';case"css":return'<i class="fa-solid fa-palette"></i>';case"scss":return'<i class="fa-solid fa-palette scss"></i>';case"html":return'<i class="fa-solid fa-code"></i>';case"json":return'<i class="fa-solid fa-gear"></i>';case"sql":return'<i class="fa-solid fa-database"></i>';case"vb":return'<i class="fa-solid fa-scroll"></i>';case"text":return'<i class="fa-solid fa-font"></i>';case"markdown":return'<i class="fa-solid fa-book"></i>';default:return'<i class="fa-solid fa-file"></i>'}}getText(){return v(this,void 0,void 0,(function*(){if(this.model)return this.model.getValue();{const e=yield this.handle.getFile();return yield e.text()}}))}setText(e){return v(this,void 0,void 0,(function*(){if(this.model)return this.model.setValue(e);{const n=yield this.handle.createWritable();yield n.write(e),yield n.close()}}))}loadModel(){return v(this,void 0,void 0,(function*(){this.model&&this.unloadModel();const e=this,n=yield this.getText();this.model=a.editor.createModel(n,this.language(),a.Uri.file(this.path())),this.model.onDidChangeContent((function(n){var t,i;t=e,i=n.isFlush?0:2e3,document.getElementById("autoSave").classList.add("orange"),document.getElementById("compileButton").classList.add("orange"),clearTimeout(b[t.path()]),b[t.path()]=setTimeout((function(){return v(this,void 0,void 0,(function*(){document.getElementById("autoSave").children[0].classList.add("fa-flip"),w++,yield t.save(),0==--w&&document.getElementById("autoSave").children[0].classList.remove("fa-flip"),delete b[t.path()],0==Object.keys(b).length&&document.getElementById("autoSave").classList.remove("orange")}))}),i)})),this.input.checked=!0}))}loadTree(){return v(this,void 0,void 0,(function*(){return o.files[this.path()]=this,this.createTreeElement()}))}unloadModel(){var e,n,t;this.deactivate({left:!0,right:!0}),null===(e=this.leftTab)||void 0===e||e.remove(),this.leftTab=null,null===(n=this.rightTab)||void 0===n||n.remove(),this.rightTab=null,null===(t=this.model)||void 0===t||t.dispose(),this.model=void 0,this.input.checked=!1}save(){return v(this,void 0,void 0,(function*(){if(!this.language()&&!confirm("File Type not supported. Okay to save?"))return;const e=yield this.handle.createWritable();yield e.write(this.model.getValue()),yield e.close()}))}remove(e){return v(this,void 0,void 0,(function*(){(e||confirm(`Are you sure you want to delete ${this.name()}`))&&(this.unloadModel(),delete o.files[this.path()],delete this.parentFolder.files[this.name()],this.container.remove(),yield this.handle.remove({recursive:!0}))}))}rename(){return v(this,void 0,void 0,(function*(){var e=prompt("New filename",this.name());if(e){if(this.parentFolder.files[e])return alert("File already exists with that name: "+e),!1;let n=this.input.checked,t=u.activeFile===this,i=f.activeFile===this;this.unloadModel(),delete o.files[this.path()],delete this.parentFolder.files[this.name()],yield this.handle.move(e),this.container.remove(),yield this.parentFolder.loadFile(this),n&&(yield this.loadModel(),this.activate({left:t,right:i}))}}))}contextMenu(){const e=this;return new m(this,[..."javascript"===this.language()||"typescript"===this.language()?[{icon:'<i class="fa-solid fa-gear"></i>',label:"Run",action:function(){return v(this,void 0,void 0,(function*(){yield e.run()}))}}]:[],..."markdown"===this.language()?[{icon:'<i class="fa-solid fa-gear"></i>',label:"PreviewMarkdown",action:function(){}}]:[],{icon:'<i class="fa-solid fa-pencil"></i>',label:"Rename",action:function(){return v(this,void 0,void 0,(function*(){yield e.rename()}))}},{icon:'<i class="fa-solid fa-trash-can"></i>',label:"Delete",action:function(){return v(this,void 0,void 0,(function*(){yield e.remove()}))}}])}createTreeElement(){const e=this;this.container.innerHTML="",this.label=p({parent:this.container,className:"label",innerHTML:`${this.icon()}<span>${this.name()}</span>`,listeners:[{type:"click",listener:function(){e.activate({left:!0})}},{type:"contextmenu",listener:function(e){n.show(e)}}]}),this.label.draggable=!0,this.label.addEventListener("dragstart",(function(n){o.dragFile=e})),this.input=document.createElement("input"),this.input.type="checkbox",this.input.checked=!1,this.input.addEventListener("change",(function(){return v(this,void 0,void 0,(function*(){e.input.checked?yield e.loadModel():e.unloadModel()}))}));const n=this.contextMenu();return this.container.appendChild(this.input),this.container.appendChild(this.label),this.container.appendChild(n.container),this.container}activate(e,n){var t,i;return v(this,void 0,void 0,(function*(){this.input.checked||(this.input.checked=!0,yield this.loadModel()),e.left&&(null===(t=u.activeFile)||void 0===t||t.deactivate({left:!0}),u.setModel(this.model),u.restoreViewState(this.state.viewState),this.label.classList.add("active","left"),u.activeFile=this,this.leftTab?this.leftTab.classList.add("active"):this.createTab({left:!0})),e.right&&(null===(i=f.activeFile)||void 0===i||i.deactivate({right:!0}),f.setModel(this.model),f.restoreViewState(this.state.viewState),this.label.classList.add("active","right"),f.activeFile=this,this.rightTab?this.rightTab.classList.add("active"):this.createTab({right:!0}))}))}deactivate(e){var n,t,i,o,a;this.state.viewState=u.saveViewState(),e.left&&(null===(n=this.label)||void 0===n||n.classList.remove("left"),u.activeFile=null,u.setModel(null),null===(t=this.leftTab)||void 0===t||t.classList.remove("active")),e.right&&(null===(i=this.label)||void 0===i||i.classList.remove("right"),f.activeFile=null,f.setModel(null),null===(o=this.rightTab)||void 0===o||o.classList.remove("active")),f.activeFile!==this&&u.activeFile!==this&&(null===(a=this.label)||void 0===a||a.classList.remove("active"))}createTab(e){const n=this,t=new m(this,[{icon:'<i class="fa-solid fa-circle-left"></i>',label:"Move Left",action:function(){return v(this,void 0,void 0,(function*(){i.previousElementSibling&&i.parentNode.insertBefore(i,i.previousElementSibling)}))}},{icon:'<i class="fa-solid fa-circle-right"></i>',label:"Move Right",action:function(){return v(this,void 0,void 0,(function*(){i.nextElementSibling&&i.parentNode.insertBefore(i,i.nextElementSibling)}))}},{icon:'<i class="fa-solid fa-xmark"></i>',label:"Close",action:function(){return v(this,void 0,void 0,(function*(){i.remove(),n.deactivate(e),e.left&&(n.leftTab=null),e.right&&(n.rightTab=null)}))}}]),i=p({parent:this.container,className:"tab active",innerHTML:`${this.icon()}<span>${this.name()}</span>`,listeners:[{type:"click",listener:function(i){t.container.contains(i.target)||n.activate(e)}},{type:"contextmenu",listener:function(e){t.container.contains(e.target)||t.show(e)}}]});i.appendChild(t.container),e.left&&(this.leftTab=i,l.appendChild(i)),e.right&&(this.rightTab=i,d.appendChild(i))}run(){return v(this,void 0,void 0,(function*(){}))}}const b={};var w=0,x=function(e,n,t,i){return new(t||(t=Promise))((function(o,a){function s(e){try{l(i.next(e))}catch(e){a(e)}}function r(e){try{l(i.throw(e))}catch(e){a(e)}}function l(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(s,r)}l((i=i.apply(e,n||[])).next())}))},T=function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n,t=e[Symbol.asyncIterator];return t?t.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),n={},i("next"),i("throw"),i("return"),n[Symbol.asyncIterator]=function(){return this},n);function i(t){n[t]=e[t]&&function(n){return new Promise((function(i,o){!function(e,n,t,i){Promise.resolve(i).then((function(n){e({value:n,done:t})}),n)}(i,o,(n=e[t](n)).done,n.value)}))}}};class E{constructor(e,n){var t;this.handle=e,this.parentFolder=n,this.state={expanded:!1,loaded:null!==(t=null==n?void 0:n.state.loaded)&&void 0!==t&&t},this.files={},this.folders={},this.container=p({className:"container folder"})}name(){return this.handle.name}path(){return this.parentFolder===o.rootFolder?this.name():this.parentFolder.path()+"/"+this.name()}icon(){return'<i class="fa-solid fa-folder"></i>'}contextMenu(){const e=this;return new m(this,[{icon:'<i class="fa-solid fa-file-circle-plus"></i>',label:"New File",action:function(){return x(this,void 0,void 0,(function*(){(yield e.newFile()).activate({left:!0}),e.expand()}))}},{icon:'<i class="fa-solid fa-folder-plus"></i>',label:"New Folder",action:function(){return x(this,void 0,void 0,(function*(){yield e.newFolder(),e.expand()}))}},{icon:'<i class="fa-solid fa-rotate"></i>',label:"Refresh",action:function(){return x(this,void 0,void 0,(function*(){yield e.reload()}))}},{icon:'<i class="fa-solid fa-circle-plus"></i>',label:"Load Models",action:function(){return x(this,void 0,void 0,(function*(){yield e.loadModels()}))}},{icon:'<i class="fa-solid fa-circle-minus"></i>',label:"Unload Models",action:function(){return x(this,void 0,void 0,(function*(){yield e.unloadModels()}))}},{icon:'<i class="fa-solid fa-trash-can"></i>',label:"Delete",action:function(){return x(this,void 0,void 0,(function*(){yield e.remove()}))}}])}createTreeElement(){const e=this;this.container.innerHTML="",this.label=p({parent:this.container,className:"label",listeners:[{type:"click",listener:function(){e.state.expanded?e.collapse():e.expand()}},{type:"contextmenu",listener:function(e){n.show(e)}}]}),this.childrenContainer=p({parent:this.container,className:"children hidden"}),this.folderContainer=p({parent:this.childrenContainer}),this.fileContainer=p({parent:this.childrenContainer});const n=this.contextMenu();return this.container.appendChild(n.container),this.collapse(),this.container}collapse(){this.label.innerHTML=`\n\t\t<i class='fa-solid fa-chevron-right'></i>\n\t\t<i class='fa-solid fa-folder'></i>\n\t\t<span class='tree-label-name'>${this.name()}</span>`,this.childrenContainer.classList.toggle("hidden",!0),this.state.expanded=!1}expand(){this.label.innerHTML=`\n\t\t<i class='fa-solid fa-chevron-down'></i>\n\t\t<i class='fa-solid fa-folder-open'></i>\n\t\t<span class='tree-label-name'>${this.name()}</span>`,this.childrenContainer.classList.toggle("hidden",!1),this.state.expanded=!0}loadTree(){var e,n,t,i;return x(this,void 0,void 0,(function*(){yield this.unloadModels(),this.files={},this.folders={};const o=this.createTreeElement();try{for(var a,s=!0,r=T(this.handle.values());a=yield r.next(),!(e=a.done);s=!0){i=a.value,s=!1;const e=i;"directory"==e.kind?this.loadFolder(new E(e,this)):this.loadFile(new y(e,this))}}catch(e){n={error:e}}finally{try{s||e||!(t=r.return)||(yield t.call(r))}finally{if(n)throw n.error}}return o}))}loadFolder(e){return x(this,void 0,void 0,(function*(){this.folders[e.name()]=e;let n=Object.keys(this.folders).sort(),t=n.indexOf(e.name())+1,i=this.folders[n[t]];const o=yield e.loadTree();this.folderContainer.insertBefore(o,null==i?void 0:i.container)}))}loadFile(e){return x(this,void 0,void 0,(function*(){this.files[e.name()]=e;let n=Object.keys(this.files).sort(),t=n.indexOf(e.name())+1,i=this.files[n[t]];const o=yield e.loadTree();this.fileContainer.insertBefore(o,null==i?void 0:i.container)}))}loadModels(){var e,n,t,i,o,a,s,r;return x(this,void 0,void 0,(function*(){try{for(var l,d=!0,c=T(Object.entries(this.files));l=yield c.next(),!(e=l.done);d=!0){i=l.value,d=!1;const[e,n]=i;n.language()&&(yield n.loadModel())}}catch(e){n={error:e}}finally{try{d||e||!(t=c.return)||(yield t.call(c))}finally{if(n)throw n.error}}try{for(var u,f=!0,h=T(Object.entries(this.folders));u=yield h.next(),!(o=u.done);f=!0){r=u.value,f=!1;const[e,n]=r;"!"!==n.name()[0]&&(yield n.loadModels())}}catch(e){a={error:e}}finally{try{f||o||!(s=h.return)||(yield s.call(h))}finally{if(a)throw a.error}}}))}unloadModels(){var e,n,t,i,o,a,s,r;return x(this,void 0,void 0,(function*(){try{for(var l,d=!0,c=T(Object.entries(this.files));l=yield c.next(),!(e=l.done);d=!0){i=l.value,d=!1;const[e,n]=i;n.unloadModel()}}catch(e){n={error:e}}finally{try{d||e||!(t=c.return)||(yield t.call(c))}finally{if(n)throw n.error}}try{for(var u,f=!0,h=T(Object.entries(this.folders));u=yield h.next(),!(o=u.done);f=!0){r=u.value,f=!1;const[e,n]=r;yield n.unloadModels()}}catch(e){a={error:e}}finally{try{f||o||!(s=h.return)||(yield s.call(h))}finally{if(a)throw a.error}}}))}reload(){return x(this,void 0,void 0,(function*(){yield this.loadTree(),this.state.expanded?this.collapse():this.expand()}))}remove(e){var n,t,i,o,a,s,r,l;return x(this,void 0,void 0,(function*(){if(e||confirm(`Are you sure you want to delete ${this.name()}`)){try{for(var d,c=!0,u=T(Object.entries(this.files));d=yield u.next(),!(n=d.done);c=!0){o=d.value,c=!1;const[e,n]=o;yield n.remove(!0)}}catch(e){t={error:e}}finally{try{c||n||!(i=u.return)||(yield i.call(u))}finally{if(t)throw t.error}}try{for(var f,h=!0,p=T(Object.entries(this.folders));f=yield p.next(),!(a=f.done);h=!0){l=f.value,h=!1;const[e,n]=l;yield n.remove(!0)}}catch(e){s={error:e}}finally{try{h||a||!(r=p.return)||(yield r.call(p))}finally{if(s)throw s.error}}this.container.remove(),yield this.handle.remove({recursive:!0})}}))}newFile(e){return x(this,void 0,void 0,(function*(){const n=null!=e?e:prompt("Name of new file with extension");if(!n)return null;const t=n.split("/"),i=t.pop(),o=t.join("/");var a=yield this.newFolder(o);if(!i)return null;try{var s=yield a.handle.getFileHandle(i);return a.files[i]}catch(e){s=yield a.handle.getFileHandle(i,{create:!0});var r=new y(s,a);return yield a.loadFile(r),r}}))}newFolder(e){return x(this,void 0,void 0,(function*(){const n=null!=e?e:prompt("Name of new folder");if(!n)return this;const t=n.split("/"),i=t.shift(),o=t.join("/");try{var a=yield this.handle.getDirectoryHandle(i),s=this.folders[i];return yield s.newFolder(o)}catch(e){return a=yield this.handle.getDirectoryHandle(i,{create:!0}),s=new E(a,this),yield this.loadFolder(s),yield s.newFolder(o)}}))}}var D=function(e,n,t,i){return new(t||(t=Promise))((function(o,a){function s(e){try{l(i.next(e))}catch(e){a(e)}}function r(e){try{l(i.throw(e))}catch(e){a(e)}}function l(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(s,r)}l((i=i.apply(e,n||[])).next())}))};window.addEventListener("error",(function(e){console.log(e.message)})),console.log=function(e){document.getElementById("log").innerText+="\n"+e,document.getElementById("viewLog").classList.add("orange")};const M=document.getElementById("logContainer");document.getElementById("viewLog").addEventListener("click",(function(){M.classList.toggle("hidden"),document.getElementById("viewLog").classList.remove("orange")})),M.addEventListener("click",(function(e){e.target===M&&(M.classList.add("hidden"),document.getElementById("log").innerHTML="")})),document.getElementById("openFolder").addEventListener("click",(function(){return D(this,void 0,void 0,(function*(){try{const e=yield window.showDirectoryPicker();yield function(e){return D(this,void 0,void 0,(function*(){return"granted"===(yield e.queryPermission({mode:"readwrite"}))||"granted"===(yield e.requestPermission({mode:"readwrite"}))}))}(e),o.rootFolder=new E(e),document.title=o.rootFolder.name();const n=document.getElementById("tree");n.innerHTML="",n.appendChild(yield o.rootFolder.loadTree()),yield o.rootFolder.loadModels()}catch(e){console.log(e)}}))}))})();